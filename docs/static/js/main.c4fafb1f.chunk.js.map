{"version":3,"sources":["logo.svg","App.tsx","NoteButton.tsx","Audio.ts","Player.tsx","Notes.ts","Site.tsx","Help.tsx","Calibration.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Display","NoteButton","_PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keydown","e","which","keycode","setState","active","start","keyup","stop","state","inherits","createClass","key","value","document","addEventListener","removeEventListener","_this2","touchEnd","classes","isLeft","style","height","concat","marginTop","topMargin","react_default","a","createElement","className","onTouchStart","onTouchEnd","onTouchCancel","text","octave","PureComponent","Audio","audioCtx","gain","oscillators","AudioContext","createGain","connect","destination","volume","setValueAtTime","currentTime","frequency","undefined","oscillator","createOscillator","type","noteGain","noteOscillator","exponentialRampToValueAtTime","setTimeout","disconnect","Player","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","audio","setVolume","fullscreenElement","documentElement","requestFullscreen","stopAll","exitFullscreen","prevProps","prevState","notes","map","note","index","left","margin","leftButtonOffset","rightButtonOffset","buttonSpacing","NoteButton_NoteButton","name","buttonLength","flip","href","onClick","preventDefault","exit","Component","D4","E4","F4","Gb4","G4","A4","B4","C5","Db5","D5","Eb5","E5","Gb5","Ab5","scales","Site","selectedScaleIndex","indexOf","selectedScale","scaleOptions","scale","toString","src","logo","alt","help","play","onChange","selectScale","target","selectedIndex","min","max","step","parseFloat","checked","setFlip","calibrate","Help","mouthEdge","back","Calibration","timer","numTouches","touchChange","touches","i","push","x","pageX","y","pageY","checkCalibration","clearTimeout","sort","b","leftHalf","slice","t","window","innerHeight","rightHalf","leftEdges","rightEdges","sizes","navigator","vibrate","finish","scaleVarName","volumeVarName","flipVarName","buttonOffsetsVarName","buttonSizesVarName","App","savedScale","sessionStorage","getItem","match","filter","s","vol","savedVol","buttonSizes","savedButtonSize","JSON","parse","buttonOffsets","savedButtonOffsets","display","Home","Help_Help","Play","Player_Player","Calibration_Calibration","setItem","stringify","Site_Site","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4fafb1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport { Player } from './Player';\r\nimport { Site } from './Site';\r\nimport { IScale, scales } from './Notes';\r\nimport { Help } from './Help';\r\nimport { Calibration } from './Calibration';\r\n\r\nenum Display {\r\n    Home,\r\n    Help,\r\n    Play,\r\n    Calibration,\r\n}\r\n\r\ninterface IState {\r\n    display: Display;\r\n\r\n    scale: IScale;\r\n    volume: number;\r\n    flip: boolean;\r\n\r\n    buttonSizes: number[];\r\n    buttonOffsets: number[];\r\n}\r\n\r\nconst scaleVarName = 'scale';\r\nconst volumeVarName = 'volume';\r\nconst flipVarName = 'flip';\r\nconst buttonOffsetsVarName = 'buttonOffsets';\r\nconst buttonSizesVarName = 'buttonSizes';\r\n\r\nclass App extends Component<{}, IState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        \r\n        // load saved settings, if present\r\n        let scale = scales[0];\r\n\r\n        const savedScale = sessionStorage.getItem(scaleVarName);\r\n        if (savedScale !== null) {\r\n            const match = scales.filter(s => s.name === savedScale);\r\n            if (match.length > 0) {\r\n                scale = match[0];\r\n            }\r\n        }\r\n\r\n        let vol = 0.1;\r\n        const savedVol = sessionStorage.getItem(volumeVarName);\r\n        if (savedVol !== null) {\r\n            const value = parseFloat(savedVol);\r\n            if (value >= 0 && value <= 1) {\r\n                vol = value;\r\n            }\r\n        }\r\n\r\n        let flip = false;\r\n        if (sessionStorage.getItem(flipVarName) === '1') {\r\n            flip = true;\r\n        }\r\n\r\n        let buttonSizes = [20, 20, 20, 20, 20, 20, 20, 20];\r\n        const savedButtonSize = sessionStorage.getItem(buttonSizesVarName);\r\n        if (savedButtonSize !== null) {\r\n            buttonSizes = JSON.parse(savedButtonSize);\r\n        }\r\n\r\n        let buttonOffsets = [3, 3, 3, 3, 6, 3, 3, 3];\r\n        const savedButtonOffsets = sessionStorage.getItem(buttonOffsetsVarName);\r\n        if (savedButtonOffsets !== null) {\r\n            buttonOffsets = JSON.parse(savedButtonOffsets);\r\n        }\r\n\r\n        this.state = {\r\n            display: Display.Home,\r\n            scale: scale,\r\n            volume: vol,\r\n            flip: flip,\r\n            buttonSizes: buttonSizes,\r\n            buttonOffsets: buttonOffsets,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.display === Display.Help) {\r\n            const back = () => this.setState({ display: Display.Home });\r\n\r\n            return <Help\r\n                back={back}\r\n                flip={this.state.flip}\r\n            />\r\n        }\r\n        else if (this.state.display === Display.Play) {\r\n            const exit = () => this.setState({ display: Display.Home });\r\n\r\n            return <Player\r\n                exit={exit}\r\n                notes={this.state.scale.notes}\r\n                volume={this.state.volume}\r\n                flip={this.state.flip}\r\n                buttonLength={20}\r\n                buttonSpacing={3}\r\n                leftButtonOffset={3}\r\n                rightButtonOffset={6}\r\n            />\r\n        }\r\n        else if (this.state.display === Display.Calibration) {\r\n            const calibrate = (buttonSizes: number[], buttonOffsets: number[]) => {\r\n                sessionStorage.setItem(buttonSizesVarName, JSON.stringify(buttonSizes));\r\n                sessionStorage.setItem(buttonOffsetsVarName, JSON.stringify(buttonOffsets));\r\n\r\n                this.setState({\r\n                    buttonSizes: buttonSizes,\r\n                    buttonOffsets: buttonOffsets,\r\n                    display: Display.Play, // jump straight to playing\r\n                });\r\n            };\r\n            \r\n            return <Calibration\r\n                finish={calibrate}\r\n            />\r\n        }\r\n        else {\r\n            const play = () => this.setState({ display: Display.Play });\r\n            const help = () => this.setState({ display: Display.Help });\r\n            const calibrate = () => this.setState({ display: Display.Calibration });\r\n\r\n            const setScale = (scale: IScale) => {\r\n                sessionStorage.setItem(scaleVarName, scale.name);\r\n                this.setState({ scale: scale });\r\n            };\r\n\r\n            const setVolume = (vol: number) => {\r\n                sessionStorage.setItem(volumeVarName, vol.toString());\r\n                this.setState({ volume: vol });\r\n            };\r\n\r\n            const setFlip = (flip: boolean) => {\r\n                sessionStorage.setItem(flipVarName, flip ? '1' : '0');\r\n                this.setState({ flip: flip });\r\n            };\r\n\r\n            return <Site\r\n                help={help}\r\n                play={play}\r\n                calibrate={calibrate}\r\n\r\n                selectedScale={this.state.scale}\r\n                selectScale={setScale}\r\n\r\n                volume={this.state.volume}\r\n                setVolume={setVolume}\r\n\r\n                flip={this.state.flip}\r\n                setFlip={setFlip}\r\n            />\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, { PureComponent } from 'react';\r\n\r\ninterface IProps {\r\n    text: string;\r\n    octave: number;\r\n    \r\n    isLeft: boolean;\r\n    height: number;\r\n    topMargin: number;\r\n\r\n    start: () => void;\r\n    stop: () => void;\r\n\r\n    keycode: number;\r\n}\r\n\r\ninterface IState {\r\n    active: boolean;\r\n}\r\n\r\nexport class NoteButton extends PureComponent<IProps, IState> {\r\n    private readonly keydown = (e: KeyboardEvent) => {\r\n        if (e.which === this.props.keycode) {    \r\n            this.setState({\r\n                active: true,\r\n            });\r\n            this.props.start();\r\n        }\r\n    };\r\n    private readonly keyup = (e: KeyboardEvent) => {\r\n        if (e.which === this.props.keycode) {    \r\n            this.setState({\r\n                active: false,\r\n            });\r\n            this.props.stop();\r\n        }\r\n    };\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.keydown);\r\n        document.addEventListener('keyup', this.keyup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.keydown);\r\n        document.removeEventListener('keyup', this.keyup);\r\n    }\r\n\r\n    render() {\r\n        const touchStart = () => {\r\n            this.setState({\r\n                active: true,\r\n            });\r\n            this.props.start();\r\n        };\r\n\r\n        const touchEnd = () => {\r\n            this.setState({\r\n                active: false,\r\n            });\r\n            this.props.stop();\r\n        };\r\n\r\n        let classes = this.state.active\r\n            ? 'player__note player__note--active'\r\n            : 'player__note';\r\n\r\n        classes += this.props.isLeft\r\n            ? ' player__note--left'\r\n            : ' player__note--right'\r\n\r\n        const style = {\r\n            height: `${this.props.height}vh`,\r\n            marginTop: `${this.props.topMargin}vh`,\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className={classes}\r\n                style={style}\r\n                onTouchStart={touchStart}\r\n                onTouchEnd={touchEnd}\r\n                onTouchCancel={touchEnd}\r\n            >\r\n                {this.props.text}<sub>{this.props.octave}</sub>\r\n            </div>\r\n        );\r\n    }\r\n}","//const AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\r\n\r\ninterface INoteOscillator {\r\n    oscillator: OscillatorNode;\r\n    gain: GainNode;\r\n}\r\n\r\nexport class Audio {\r\n    private readonly audioCtx: AudioContext;\r\n    private readonly gain: GainNode;\r\n    private readonly oscillators: { [key:number]: INoteOscillator; } = {};\r\n\r\n    constructor() {\r\n        this.audioCtx = new AudioContext();\r\n        this.gain = this.audioCtx.createGain();\r\n        this.gain.connect(this.audioCtx.destination);\r\n    }\r\n\r\n    public setVolume(volume: number) {\r\n        this.gain.gain.setValueAtTime(volume, this.audioCtx.currentTime);\r\n    }\r\n\r\n    public start(frequency: number) {\r\n        let noteOscillator = this.oscillators[frequency];\r\n\r\n        if (noteOscillator !== undefined) {\r\n            // already playing, cannot play more\r\n            return;\r\n        }\r\n\r\n        const oscillator = this.audioCtx.createOscillator();\r\n\r\n        oscillator.type = 'sine';\r\n        oscillator.frequency.setValueAtTime(frequency, this.audioCtx.currentTime);\r\n        oscillator.start();\r\n\r\n        const noteGain = this.audioCtx.createGain();        \r\n        oscillator.connect(noteGain);\r\n\r\n        noteGain.connect(this.gain)\r\n        this.oscillators[frequency] = {\r\n            oscillator: oscillator,\r\n            gain: noteGain,\r\n        };\r\n    }\r\n\r\n    public stop(frequency: number) {\r\n        const noteOscillator = this.oscillators[frequency];\r\n\r\n        if (noteOscillator === undefined) {\r\n            // not playing this frequency, nothing to stop\r\n            return;\r\n        }\r\n\r\n        delete this.oscillators[frequency];\r\n        \r\n        // fade out, to avoid a \"pop\" from the sudden cutoff\r\n        const gain = noteOscillator.gain.gain;\r\n        gain.setValueAtTime(gain.value, this.audioCtx.currentTime); \r\n        noteOscillator.gain.gain.exponentialRampToValueAtTime(0.0001, this.audioCtx.currentTime + 0.03);\r\n\r\n        setTimeout(() => {\r\n            noteOscillator.oscillator.stop();\r\n            noteOscillator.gain.disconnect(this.gain);\r\n        }, 25);\r\n    }\r\n\r\n    public stopAll() {\r\n        for (let key in this.oscillators) {\r\n            const noteOscillator = this.oscillators[key];\r\n\r\n            noteOscillator.oscillator.stop();\r\n            noteOscillator.gain.disconnect(this.gain);\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NoteButton } from './NoteButton';\r\nimport { INote } from './Notes';\r\nimport './Player.css';\r\nimport { Audio } from './Audio';\r\n\r\ninterface IProps {\r\n    exit: () => void;\r\n    notes: INote[];\r\n    volume: number;\r\n    flip: boolean;\r\n\r\n    buttonLength: number;\r\n    buttonSpacing: number;\r\n    leftButtonOffset: number;\r\n    rightButtonOffset: number;\r\n}\r\n\r\nexport class Player extends Component<IProps, {}> {\r\n    private audio = new Audio();\r\n\r\n    componentDidMount() {\r\n        this.audio.setVolume(this.props.volume);\r\n\r\n        if (!(document as any).fullscreenElement) {\r\n            document.documentElement.requestFullscreen();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.audio.stopAll();\r\n\r\n        if (document.exitFullscreen && (document as any).fullscreenElement) {\r\n            document.exitFullscreen();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: IProps, prevState: {}) {\r\n        if (this.props.volume !== prevProps.volume) {\r\n            this.audio.setVolume(this.props.volume);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const backClicked = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n            e.preventDefault();\r\n            this.props.exit();\r\n        };\r\n\r\n        const notes = this.props.notes.map((note, index) => {\r\n            const start = () => this.audio.start(note.frequency);\r\n            const stop = () => this.audio.stop(note.frequency);\r\n        \r\n            const left = index < 4;\r\n\r\n            const margin = index === 3\r\n                ? this.props.leftButtonOffset\r\n                : index === 7\r\n                    ? this.props.rightButtonOffset\r\n                    : this.props.buttonSpacing;\r\n\r\n            return <NoteButton\r\n                key={index}\r\n                keycode={index + 49}\r\n                text={note.name}\r\n                octave={note.octave}\r\n                start={start}\r\n                stop={stop}\r\n                height={this.props.buttonLength}\r\n                topMargin={margin}\r\n                isLeft={left}\r\n            />\r\n        });\r\n\r\n        const classes = this.props.flip\r\n            ? 'player player--flipped'\r\n            : 'player';\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <div className=\"player__notes\">\r\n                    {notes}\r\n                </div>\r\n\r\n                <a\r\n                    className=\"player__back\"\r\n                    href=\"#\"\r\n                    onClick={backClicked}\r\n                >\r\n                    go back\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}","export interface INote {\r\n    name: string;\r\n    frequency: number;\r\n    octave: number;\r\n}\r\n\r\nexport interface IScale {\r\n    name: string;\r\n    notes: INote[];\r\n}\r\n\r\nconst C0 = { name: 'C', frequency: 16.35, octave: 0, };\r\nconst Db0 = { name: 'D♭', frequency: 17.32, octave: 0, };\r\nconst D0 = { name: 'D', frequency: 18.35, octave: 0, };\r\nconst Eb0 = { name: 'E♭', frequency: 19.45, octave: 0, };\r\nconst E0 = { name: 'E', frequency: 20.6, octave: 0, };\r\nconst F0 = { name: 'F', frequency: 21.83, octave: 0, };\r\nconst Gb0 = { name: 'G♭', frequency: 23.12, octave: 0, };\r\nconst G0 = { name: 'G', frequency: 24.5, octave: 0, };\r\nconst Ab0 = { name: 'A♭', frequency: 25.96, octave: 0, };\r\nconst A0 = { name: 'A', frequency: 27.5, octave: 0, };\r\nconst Bb0 = { name: 'B♭', frequency: 29.14, octave: 0, };\r\nconst B0 = { name: 'B', frequency: 30.87, octave: 0, };\r\n\r\nconst C1 = { name: 'C', frequency: 32.7, octave: 1, };\r\nconst Db1 = { name: 'D♭', frequency: 34.65, octave: 1, };\r\nconst D1 = { name: 'D', frequency: 36.71, octave: 1, };\r\nconst Eb1 = { name: 'E♭', frequency: 38.89, octave: 1, };\r\nconst E1 = { name: 'E', frequency: 41.2, octave: 1, };\r\nconst F1 = { name: 'F', frequency: 43.65, octave: 1, };\r\nconst Gb1 = { name: 'G♭', frequency: 46.25, octave: 1, };\r\nconst G1 = { name: 'G', frequency: 49, octave: 1, };\r\nconst Ab1 = { name: 'A♭', frequency: 51.91, octave: 1, };\r\nconst A1 = { name: 'A', frequency: 55, octave: 1, };\r\nconst Bb1 = { name: 'B♭', frequency: 58.27, octave: 1, };\r\nconst B1 = { name: 'B', frequency: 61.74, octave: 1, };\r\n\r\nconst C2 = { name: 'C', frequency: 65.41, octave: 2, };\r\nconst Db2 = { name: 'D♭', frequency: 69.3, octave: 2, };\r\nconst D2 = { name: 'D', frequency: 73.42, octave: 2, };\r\nconst Eb2 = { name: 'E♭', frequency: 77.78, octave: 2, };\r\nconst E2 = { name: 'E', frequency: 82.41, octave: 2, };\r\nconst F2 = { name: 'F', frequency: 87.31, octave: 2, };\r\nconst Gb2 = { name: 'G♭', frequency: 92.5, octave: 2, };\r\nconst G2 = { name: 'G', frequency: 98, octave: 2, };\r\nconst Ab2 = { name: 'A♭', frequency: 103.83, octave: 2, };\r\nconst A2 = { name: 'A', frequency: 110, octave: 2, };\r\nconst Bb2 = { name: 'B♭', frequency: 116.54, octave: 2, };\r\nconst B2 = { name: 'B', frequency: 123.47, octave: 2, };\r\n\r\nconst C3 = { name: 'C', frequency: 130.81, octave: 3, };\r\nconst Db3 = { name: 'D♭', frequency: 138.59, octave: 3, };\r\nconst D3 = { name: 'D', frequency: 146.83, octave: 3, };\r\nconst Eb3 = { name: 'E♭', frequency: 155.56, octave: 3, };\r\nconst E3 = { name: 'E', frequency: 164.81, octave: 3, };\r\nconst F3 = { name: 'F', frequency: 174.61, octave: 3, };\r\nconst Gb3 = { name: 'G♭', frequency: 185, octave: 3, };\r\nconst G3 = { name: 'G', frequency: 196, octave: 3, };\r\nconst Ab3 = { name: 'A♭', frequency: 207.65, octave: 3, };\r\nconst A3 = { name: 'A', frequency: 220, octave: 3, };\r\nconst Bb3 = { name: 'B♭', frequency: 233.08, octave: 3, };\r\nconst B3 = { name: 'B', frequency: 246.94, octave: 3, };\r\n\r\nconst C4 = { name: 'C', frequency: 261.63, octave: 4, };\r\nconst Db4 = { name: 'D♭', frequency: 277.18, octave: 4, };\r\nconst D4 = { name: 'D', frequency: 293.66, octave: 4, };\r\nconst Eb4 = { name: 'E♭', frequency: 311.13, octave: 4, };\r\nconst E4 = { name: 'E', frequency: 329.63, octave: 4, };\r\nconst F4 = { name: 'F', frequency: 349.23, octave: 4, };\r\nconst Gb4 = { name: 'G♭', frequency: 369.99, octave: 4, };\r\nconst G4 = { name: 'G', frequency: 392, octave: 4, };\r\nconst Ab4 = { name: 'A♭', frequency: 415.3, octave: 4, };\r\nconst A4 = { name: 'A', frequency: 440, octave: 4, };\r\nconst Bb4 = { name: 'B♭', frequency: 466.16, octave: 4, };\r\nconst B4 = { name: 'B', frequency: 493.88, octave: 4, };\r\n\r\nconst C5 = { name: 'C', frequency: 523.25, octave: 5, };\r\nconst Db5 = { name: 'D♭', frequency: 554.37, octave: 5, };\r\nconst D5 = { name: 'D', frequency: 587.33, octave: 5, };\r\nconst Eb5 = { name: 'E♭', frequency: 622.25, octave: 5, };\r\nconst E5 = { name: 'E', frequency: 659.25, octave: 5, };\r\nconst F5 = { name: 'F', frequency: 698.46, octave: 5, };\r\nconst Gb5 = { name: 'G♭', frequency: 739.99, octave: 5, };\r\nconst G5 = { name: 'G', frequency: 783.99, octave: 5, };\r\nconst Ab5 = { name: 'A♭', frequency: 830.61, octave: 5, };\r\nconst A5 = { name: 'A', frequency: 880, octave: 5, };\r\nconst Bb5 = { name: 'B♭', frequency: 932.33, octave: 5, };\r\nconst B5 = { name: 'B', frequency: 987.77, octave: 5, };\r\n\r\nconst C6 = { name: 'C', frequency: 1046.5, octave: 6, };\r\nconst Db6 = { name: 'D♭', frequency: 1108.73, octave: 6, };\r\nconst D6 = { name: 'D', frequency: 1174.66, octave: 6, };\r\nconst Eb6 = { name: 'E♭', frequency: 1244.51, octave: 6, };\r\nconst E6 = { name: 'E', frequency: 1318.51, octave: 6, };\r\nconst F6 = { name: 'F', frequency: 1396.91, octave: 6, };\r\nconst Gb6 = { name: 'G♭', frequency: 1479.98, octave: 6, };\r\nconst G6 = { name: 'G', frequency: 1567.98, octave: 6, };\r\nconst Ab6 = { name: 'A♭', frequency: 1661.22, octave: 6, };\r\nconst A6 = { name: 'A', frequency: 1760, octave: 6, };\r\nconst Bb6 = { name: 'B♭', frequency: 1864.66, octave: 6, };\r\nconst B6 = { name: 'B', frequency: 1975.53, octave: 6, };\r\n\r\nconst C7 = { name: 'C', frequency: 2093, octave: 7, };\r\nconst Db7 = { name: 'D♭', frequency: 2217.46, octave: 7, };\r\nconst D7 = { name: 'D', frequency: 2349.32, octave: 7, };\r\nconst Eb7 = { name: 'E♭', frequency: 2489.02, octave: 7, };\r\nconst E7 = { name: 'E', frequency: 2637.02, octave: 7, };\r\nconst F7 = { name: 'F', frequency: 2793.83, octave: 7, };\r\nconst Gb7 = { name: 'G♭', frequency: 2959.96, octave: 7, };\r\nconst G7 = { name: 'G', frequency: 3135.96, octave: 7, };\r\nconst Ab7 = { name: 'A♭', frequency: 3322.44, octave: 7, };\r\nconst A7 = { name: 'A', frequency: 3520, octave: 7, };\r\nconst Bb7 = { name: 'B♭', frequency: 3729.31, octave: 7, };\r\nconst B7 = { name: 'B', frequency: 3951.07, octave: 7, };\r\n\r\nconst C8 = { name: 'C', frequency: 4186.01, octave: 8, };\r\nconst Db8 = { name: 'D♭', frequency: 4434.92, octave: 8, };\r\nconst D8 = { name: 'D', frequency: 4698.63, octave: 8, };\r\nconst Eb8 = { name: 'E♭', frequency: 4978.03, octave: 8, };\r\nconst E8 = { name: 'E', frequency: 5274.04, octave: 8, };\r\nconst F8 = { name: 'F', frequency: 5587.65, octave: 8, };\r\nconst Gb8 = { name: 'G♭', frequency: 5919.91, octave: 8, };\r\nconst G8 = { name: 'G', frequency: 6271.93, octave: 8, };\r\nconst Ab8 = { name: 'A♭', frequency: 6644.88, octave: 8, };\r\nconst A8 = { name: 'A', frequency: 7040, octave: 8, };\r\nconst Bb8 = { name: 'B♭', frequency: 7458.62, octave: 8, };\r\nconst B8 = { name: 'B', frequency: 7902.13, octave: 8, };\r\n\r\n\r\nexport const scales: IScale[] = [\r\n    {\r\n        name: 'C Major',\r\n        notes: [ C4, D4, E4, F4, G4, A4, B4, C5 ],\r\n    },\r\n    {\r\n        name: 'D Major',\r\n        notes: [ D4, E4, Gb4, G4, A4, B4, Db5, D5 ],\r\n    },\r\n    {\r\n        name: 'E Major',\r\n        notes: [ E4, Gb4, Ab4, A4, B4, Db5, Eb5, E5 ],\r\n    },\r\n    {\r\n        name: 'F Major',\r\n        notes: [ F4, G4, A4, Bb4, C5, D5, E5, F5 ],\r\n    },\r\n    {\r\n        name: 'G Major',\r\n        notes: [ G4, A4, B4, C5, D5, E5, Gb5, G5 ],\r\n    },\r\n    {\r\n        name: 'A Major',\r\n        notes: [ A4, B4, Db5, D5, E5, Gb5, Ab5, A5 ],\r\n    },\r\n    {\r\n        name: 'B Major',\r\n        notes: [ B4, Db5, Eb5, E5, Gb5, Ab5, Bb5, B5 ],\r\n    },\r\n];","import React, { Component } from 'react';\r\nimport { IScale, scales } from './Notes';\r\nimport logo from './logo.svg';\r\nimport './Site.css';\r\n\r\ninterface IProps {\r\n    play: () => void;\r\n    help: () => void;\r\n    calibrate: () => void;\r\n    \r\n    selectedScale: IScale;\r\n    selectScale: (scale: IScale) => void;\r\n\r\n    volume: number;\r\n    setVolume: (vol: number) => void;\r\n\r\n    flip: boolean;\r\n    setFlip: (flip: boolean) => void;\r\n}\r\n\r\nexport class Site extends Component<IProps, {}> {\r\n    render() {\r\n        const helpClicked = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n            e.preventDefault();\r\n            this.props.help();\r\n        };\r\n\r\n        const playClicked = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n            e.preventDefault();\r\n            this.props.play();\r\n        };\r\n\r\n        const calibrateClicked = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n            e.preventDefault();\r\n            this.props.calibrate();\r\n        };\r\n\r\n        const selectedScaleIndex = scales.indexOf(this.props.selectedScale);\r\n        const scaleOptions = scales.map((scale, index) => <option key={index} value={index.toString()}>{scale.name}</option>);\r\n        const selectScale = (e: React.ChangeEvent<HTMLSelectElement>) => this.props.selectScale(scales[e.target.selectedIndex]);\r\n        const setVolume = (e: React.ChangeEvent<HTMLInputElement>) => this.props.setVolume(parseFloat(e.target.value));\r\n        const setFlip = (e: React.ChangeEvent<HTMLInputElement>) => this.props.setFlip(e.target.checked);\r\n\r\n        return (\r\n            <div className=\"site\">\r\n                <header className=\"site__header\">\r\n                    <img src={logo} className=\"site__logo\" alt=\"logo\" />\r\n                    <p>\r\n                        Use your phone as a musical instrument!\r\n                    </p>\r\n                </header>\r\n\r\n                <div className=\"site__links\">\r\n                    <a\r\n                        className=\"site__link\"\r\n                        href=\"#\"\r\n                        onClick={helpClicked}\r\n                    >\r\n                        Instructions\r\n                    </a>\r\n                    \r\n                    <a\r\n                        className=\"site__link site__link--primary\"\r\n                        href=\"#\"\r\n                        onClick={playClicked}\r\n                    >\r\n                        Play now\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"site__options\">\r\n                \r\n                    <label className=\"site__option\">\r\n                        <span className=\"site__label\">Key</span>\r\n                        <select\r\n                            className=\"site__value\"\r\n                            value={selectedScaleIndex.toString()}\r\n                            onChange={selectScale}\r\n                        >\r\n                            {scaleOptions}\r\n                        </select>\r\n                    </label>\r\n\r\n                    <label className=\"site__option\">\r\n                        <span className=\"site__label\">Volume</span>\r\n                        <input\r\n                            className=\"site__value\"\r\n                            type=\"range\"\r\n                            min=\"0\"\r\n                            max=\"1\"\r\n                            step=\"0.025\"\r\n                            value={this.props.volume}\r\n                            onChange={setVolume}\r\n                        />\r\n                    </label>\r\n\r\n                    <label className=\"site__option\">\r\n                        <span className=\"site__label\">Flip screen</span>\r\n                        <input\r\n                            className=\"site__value\"\r\n                            type=\"checkbox\"\r\n                            checked={this.props.flip}\r\n                            onChange={setFlip}\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"site__links\">\r\n                    <a\r\n                        className=\"site__link\"\r\n                        href=\"#\"\r\n                        onClick={calibrateClicked}\r\n                    >\r\n                        Calibrate to fit\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n    back: () => void;\r\n    flip: boolean;\r\n}\r\n\r\nexport class Help extends Component<IProps, {}> {\r\n    render() {\r\n        const backClicked = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n            e.preventDefault();\r\n            this.props.back();\r\n        };\r\n\r\n        const mouthEdge = this.props.flip ? 'top' : 'bottom';\r\n\r\n        return (\r\n            <div className=\"site site--help\">\r\n                <header className=\"site__header\">\r\n                    <p>\r\n                        How to play\r\n                    </p>\r\n                </header>\r\n\r\n                <p>\r\n                    To play your phone properly, follow these instructions after you click <em>play</em>...\r\n                    <ol className=\"site__help\">\r\n                        <li>Hold your phone with the screen facing upwards.</li>\r\n                        <li>Press the {mouthEdge} edge of the phone against your lips.</li>\r\n                        <li>Rest the phone on your thumbs, with the fingers of each hand along the edges of the phone, so they can all touch the screen.</li>\r\n                        <li>Push keys and make music!</li>\r\n                    </ol>\r\n                    If the buttons don't fit your hands easily, try calibrating.\r\n                </p>\r\n                \r\n                <div className=\"site__links\">\r\n                    <a\r\n                        className=\"site__link\"\r\n                        href=\"#\"\r\n                        onClick={backClicked}\r\n                    >\r\n                        Go back\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Calibration.css';\r\n\r\ninterface IProps {\r\n    finish: (buttonSizes: number[], buttonOffsets: number[]) => void;\r\n}\r\n\r\ninterface IState {\r\n    numTouches: number;\r\n}\r\n\r\ninterface ITouch {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Calibration extends Component<IProps, IState> {\r\n    private timer: NodeJS.Timer | undefined;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numTouches: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!(document as any).fullscreenElement) {\r\n            document.documentElement.requestFullscreen();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (document.exitFullscreen && (document as any).fullscreenElement) {\r\n            document.exitFullscreen();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes = `calibration calibration--num${this.state.numTouches}`;\r\n\r\n        const text = this.state.numTouches > 0\r\n            ? <p>{this.state.numTouches}</p>\r\n            : <p>Hold the phone in position, and touch the screen with all 8 fingers in the positions that are most comfortable.\r\n                <br/><br/>    \r\n                Keep all 8 fingers touching the screen until the phone vibrates. Buttons will be placed where you put your fingers.\r\n            </p>\r\n\r\n        const touchChange = (e: React.TouchEvent) => {\r\n            this.setState({\r\n                numTouches: e.touches.length,\r\n            });\r\n\r\n            if (e.touches.length === 8) {\r\n                const touches: ITouch[] = [];\r\n                for (let i = 0; i<e.touches.length; i++) {\r\n                    touches.push({\r\n                        x: e.touches[i].pageX,\r\n                        y: e.touches[i].pageY,\r\n                    })\r\n                }\r\n\r\n                setTimeout(() => this.checkCalibration(touches), 3000);\r\n            }\r\n            else if (this.timer !== undefined) {\r\n                clearTimeout(this.timer);\r\n                this.timer = undefined;\r\n            }\r\n        };\r\n\r\n\r\n        return <div\r\n            className={classes}\r\n            onTouchStart={touchChange}\r\n            onTouchEnd={touchChange}\r\n            onTouchCancel={touchChange}\r\n        >\r\n            {text}\r\n        </div>\r\n    }\r\n\r\n    private checkCalibration(touches: ITouch[]) {\r\n        if (this.state.numTouches !== 8) {\r\n            return;\r\n        }\r\n\r\n        // separate touches into left 4 and right 4, and get their Y values, in view height units\r\n        touches.sort((a,b) => (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0));\r\n\r\n        const leftHalf = touches\r\n            .slice(0, 4)\r\n            .map(t => t.y * 100 / window.innerHeight)\r\n            .sort();\r\n\r\n        const rightHalf = touches\r\n            .slice(4)\r\n            .map(t => t.y * 100 / window.innerHeight)\r\n            .sort();\r\n\r\n        // decide where the midpoints between these buttons should be\r\n        const leftEdges = [\r\n            window.innerHeight,\r\n            (leftHalf[3] + leftHalf[2]) / 2,\r\n            (leftHalf[2] + leftHalf[1]) / 2,\r\n            (leftHalf[1] + leftHalf[0]) / 2,\r\n            0\r\n        ];\r\n\r\n        const rightEdges = [\r\n            window.innerHeight,\r\n            (rightHalf[3] + rightHalf[2]) / 2,\r\n            (rightHalf[2] + rightHalf[1]) / 2,\r\n            (rightHalf[1] + rightHalf[0]) / 2,\r\n            0\r\n        ];\r\n\r\n        // then have the button heights match the distance between those\r\n        const sizes = [\r\n            leftEdges[1] - leftEdges[0],\r\n            leftEdges[2] - leftEdges[1],\r\n            leftEdges[3] - leftEdges[2],\r\n            leftEdges[4] - leftEdges[3],\r\n\r\n            rightEdges[1] - rightEdges[0],\r\n            rightEdges[2] - rightEdges[1],\r\n            rightEdges[3] - rightEdges[2],\r\n            rightEdges[4] - rightEdges[3],\r\n        ];\r\n\r\n        // TODO: include some spacing, if we can!\r\n        const offsets = [\r\n            0, 0, 0, 0, 0, 0, 0, 0\r\n        ];\r\n\r\n        window.navigator.vibrate(100);\r\n\r\n        this.props.finish(sizes, offsets);\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}